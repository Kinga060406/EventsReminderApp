<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EventsReminderApp.MVC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/EventsReminderApp.MVC.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">EventsReminderApp</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Home">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Calendar" asp-action="Calendar">Calendar</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Events" asp-action="AddEvent">AddEvent</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Events" asp-action="Events">Events</a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="LogOut">Log out</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Log in</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - EventsReminderApp
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            // Poproś o zgodę na powiadomienia
            if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {
                Notification.requestPermission().then(function (permission) {
                    if (permission === 'granted') {
                        // Zgoda została udzielona
                    } else {
                        console.error("Użytkownik nie udzielił zgody na powiadomienia.");
                    }
                });
            }

            function showNotification(title, body) {
                if (Notification.permission === 'granted') {
                    var options = {
                        body: body,
                        // icon: '/path/to/icon.png' // upewnij się, że ścieżka jest poprawna lub usuń tę linię
                    };
                    new Notification(title, options);
                } else {
                    console.error("Brak uprawnień do wyświetlania powiadomień.");
                }
            }

            function fetchReminders() {
                $.ajax({
                    type: 'GET',
                    url: '/Notifications/GetReminders', // Zaktualizowano URL do nowego kontrolera
                    contentType: 'application/json',
                    success: function (response) {
                        response.forEach(function (reminder) {
                            var date = new Date(reminder.date);
                            var dateString = date.toLocaleString();
                            showNotification(reminder.name, reminder.description + ' at ' + dateString);
                        });
                    },
                    error: function (error) {
                        console.error('Wystąpił błąd podczas pobierania przypomnień:', error);
                    }
                });
            }

            setInterval(fetchReminders, 300000); // Co 5 minut (300000 ms)
            fetchReminders(); // Natychmiast po załadowaniu strony
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
