<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EventsReminderApp.MVC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">EventsReminderApp</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Calendar" asp-action="Calendar">Calendar</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Events" asp-action="AddEvent">Add Event</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Events" asp-action="Events">Events</a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="LogOut">Log out</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Log in</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">Admin Panel</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
            <button type="button" class="btn btn-danger" onclick="closeAllToasts()">Close All Notifications</button>
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - EventsReminderApp
        </div>
    </footer>

    <!-- Kontener audio -->
    <audio id="notification-sound" src="~/sounds/notification.mp3" preload="auto"></audio>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            console.log("Document ready");

            function showToast(title, body) {
                // Odtwarzanie dźwięku
                var audio = document.getElementById('notification-sound');
                audio.play();

                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": true,
                    "progressBar": true,
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "0",  // Toast nie zamknie się automatycznie
                    "extendedTimeOut": "0",  // Toast nie zamknie się automatycznie
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                };

                var toast = toastr.success(body, title);

                // Dodaj przycisk zamykający do powiadomienia
                $(toast).append('<button type="button" class="btn btn-secondary btn-sm mt-2" onclick="closeToast(this)">Close</button>');

                // Dodaj zdarzenie do oznaczania powiadomienia jako przeczytane po zamknięciu
                $(toast).on('hidden.bs.toast', function () {
                    markNotificationAsRead(title); // Używaj title jako identyfikatora, dostosuj w razie potrzeby
                });
            }

            function closeToast(button) {
                var toast = $(button).closest('.toast');
                toast.toast('hide');
            }

            function closeAllToasts() {
                toastr.clear();
            }

            function markNotificationAsRead(eventId) {
                // Użyj odpowiedniego identyfikatora dla eventId
                var token = $('input[name="__RequestVerificationToken"]').val();

                fetch('/Notifications/MarkAsRead', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify(eventId)
                }).then(response => {
                    if (!response.ok) {
                        console.error('Failed to mark notification as read');
                    } else {
                        console.log('Notification marked as read:', eventId);
                    }
                }).catch(error => {
                    console.error('Error:', error);
                });
            }

            function fetchReminders() {
                console.log("Fetching reminders");
                $.ajax({
                    type: 'GET',
                    url: '/Notifications/GetReminders',
                    contentType: 'application/json',
                    success: function (response) {
                        console.log("Reminders fetched successfully: ", response);
                        if (response.length === 0) {
                            console.log("No reminders found.");
                        }
                        response.forEach(function (reminder) {
                            console.log("Processing reminder: ", reminder);
                            var date = new Date(reminder.date);
                            var dateString = date.toLocaleString();
                            showToast(reminder.name, reminder.description + ' at ' + dateString);
                        });
                    },
                    error: function (error) {
                        console.error('Error fetching reminders:', error);
                    }
                });
            }

            setInterval(fetchReminders, 60000); // Co 1 minutę (60000 ms)
            fetchReminders(); // Natychmiast po załadowaniu strony
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
